{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation vpc.template: VPC with Public, Private subnet, Internet and NAT Gateway",
    "Mappings": {
      "SubnetConfig": {
        "VPC": {
          "CIDR": "10.0.0.0/16"
        },
        "Public1": {
          "CIDR": "10.0.1.0/24"
        },
        "Public2": {
          "CIDR": "10.0.2.0/24"
        },
        "Private3": {
          "CIDR": "10.0.3.0/24"
        },
        "Private4": {
          "CIDR": "10.0.4.0/24"
        }
      }
    },
    "Resources": {
      "VPC": {
        "Type": "AWS::EC2::VPC",
        "Properties": {
          "CidrBlock": {
            "Fn::FindInMap": [
              "SubnetConfig",
              "VPC",
              "CIDR"
            ]
          },
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Public"
            }
          ]
        }
      },
      "PublicSubnet": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "CidrBlock": {
            "Fn::FindInMap": [
              "SubnetConfig",
              "Public1",
              "CIDR"
            ]
          },
          "AvailabilityZone": "us-east-1a",
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Public"
            }
          ]
        }
      },
      "PublicSubnet2": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "CidrBlock": {
            "Fn::FindInMap": [
              "SubnetConfig",
              "Public2",
              "CIDR"
            ]
          },
          "AvailabilityZone": "us-east-1b",
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Public"
            }
          ]
        }
      },
      "InternetGateway": {
        "Type": "AWS::EC2::InternetGateway",
        "Properties": {
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Public"
            }
          ]
        }
      },
      "GatewayToInternet": {
        "Type": "AWS::EC2::VPCGatewayAttachment",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "InternetGatewayId": {
            "Ref": "InternetGateway"
          }
        }
      },
      "PublicRouteTable": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Public"
            }
          ]
        }
      },
      "PublicRoute": {
        "Type": "AWS::EC2::Route",
        "DependsOn": "GatewayToInternet",
        "Properties": {
          "RouteTableId": {
            "Ref": "PublicRouteTable"
          },
          "DestinationCidrBlock": "0.0.0.0/0",
          "GatewayId": {
            "Ref": "InternetGateway"
          }
        }
      },
      "PublicSubnetRouteTableAssociation": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "PublicSubnet"
          },
          "RouteTableId": {
            "Ref": "PublicRouteTable"
          }
        }
      },
      "PublicSubnetRouteTableAssociation2": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "PublicSubnet2"
          },
          "RouteTableId": {
            "Ref": "PublicRouteTable"
          }
        }
      },
      "PrivateSubnet": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "CidrBlock": {
            "Fn::FindInMap": [
              "SubnetConfig",
              "Private3",
              "CIDR"
            ]
          },
          "AvailabilityZone": "us-east-1a",
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Private"
            }
          ]
        }
      },
      "PrivateSubnet2": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "CidrBlock": {
            "Fn::FindInMap": [
              "SubnetConfig",
              "Private4",
              "CIDR"
            ]
          },
          "AvailabilityZone": "us-east-1b",
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Private"
            }
          ]
        }
      },
      "PrivateRouteTable": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Private"
            }
          ]
        }
      },
      "PrivateSubnetRouteTableAssociation": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "PrivateSubnet"
          },
          "RouteTableId": {
            "Ref": "PrivateRouteTable"
          }
        }
      },
      "PrivateSubnetRouteTableAssociation2": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "PrivateSubnet2"
          },
          "RouteTableId": {
            "Ref": "PrivateRouteTable"
          }
        }
      },
      "NAT": {
        "Type": "AWS::EC2::NatGateway",
        "Properties": {
          "AllocationId": {
            "Fn::GetAtt": [
              "EIP",
              "AllocationId"
            ]
          },
          "SubnetId": {
            "Ref": "PublicSubnet2"
          },
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Private"
            }
          ]
        }
      },
      "EIP": {
        "Type": "AWS::EC2::EIP",
        "Properties": {
          "Domain": "vpc"
        }
      },
      "PrivateRoute": {
        "Type": "AWS::EC2::Route",
        "DependsOn": "NAT",
        "Properties": {
          "RouteTableId": {
            "Ref": "PrivateRouteTable"
          },
          "DestinationCidrBlock": "0.0.0.0/0",
          "NatGatewayId": {
            "Ref": "NAT"
          }
        }
      },
      "BastionSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Allow SSH via Bastion",
          "VpcId": {
            "Ref": "VPC"
          },
          "SecurityGroupIngress": [
            {
              "IpProtocol": "TCP",
              "FromPort": 22,
              "ToPort": 22,
              "CidrIp": "0.0.0.0/0"
            }
          ]
        }
      },
      "ALBSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Allow http on ALB",
          "VpcId": {
            "Ref": "VPC"
          },
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": 80,
              "ToPort": 80,
              "CidrIp": "0.0.0.0/0"
            }
          ]
        }
      },
      "InstanceSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Allow http to client host",
          "VpcId": {
            "Ref": "VPC"
          },
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": 80,
              "ToPort": 80,
              "SourceSecurityGroupId": {
                "Ref": "ALBSecurityGroup"
              }
            },
            {
              "IpProtocol": "TCP",
              "FromPort": 22,
              "ToPort": 22,
              "SourceSecurityGroupId": {
                "Ref": "BastionSecurityGroup"
              }
            }
          ]
        }
      },

      "EC2Instance" : {
        "Type" : "AWS::EC2::Instance",
        "Properties" : {
          "InstanceType" : "t2.micro",
          
          "SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
          "KeyName" : { "Ref" : "KeyName" },
          "ImageId" : "ami-0b69ea66ff7391e80",
          "UserData": "yum install -y httpd"
        }
      }

    }
  }